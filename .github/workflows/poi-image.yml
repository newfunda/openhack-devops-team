name: BUILD AND DEPLOY POI

on:
#   push:
#     branches: [ main ]
#       paths:
#       - 'apis/poi/**' 
 workflow_dispatch
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: azure/docker-login@v1
      with: 
        login-server: openhackgr65e605acr.azurecr.io
        username: ${{ secrets.ACR_USERNAME }} 
        password: ${{ secrets.ACR_PASSWORD }}
    - run: |
            cd ${{ github.workspace }}/apis/poi/web
            docker build . -t openhackgr65e605acr.azurecr.io/devopsoh/api-poi:${{ github.sha }} 
            docker push openhackgr65e605acr.azurecr.io/devopsoh/api-poi:${{ github.sha }}
  deploy:
    needs:
    - build
    runs-on: ubuntu-latest
    if: ${{success() && github.ref == 'refs/heads/main'}}
    steps:
    - uses: azure/webapps-deploy@v2
      with:
          app-name: 'openhackgr65e605poi'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'openhackgr65e605acr.azurecr.io/devopsoh/api-poi:${{ github.sha }}'
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true
    - run: |
          Install-Module -Name Az.Websites -Scope CurrentUser -AllowClobber -Repository PSGallery -Force
          Install-Module -Name Az.Accounts -Scope CurrentUser -AllowClobber -Repository PSGallery -Force
          Import-Module -Name Az.Websites
          Import-Module -Name Az.Accounts
          
          $poiResponse = Invoke-RestMethod -Method Get -Uri 'https://openhackgr65e605poi-staging.azurewebsites.net/api/healthcheck/poi'
          if($poiResponse.status -eq 'Healthy')
          {
            Set-AzContext -SubscriptionId ${{ secrets.SUB_ID }}
            Switch-AzWebAppSlot -SourceSlotName 'staging' -DestinationSlotName 'PRODUCTION' -ResourceGroupName 'openhackgr65e605rg' -Name 'openhackgr65e605poi'
          }
          else{
            Write-Output "API is not healthy and could not be deployed to Production."
          }
          
          $poiResponse = Invoke-RestMethod -Method Get -Uri 'https://openhackgr65e605poi.azurewebsites.net/api/healthcheck/poi'
          if($poiResponse.status -ne 'Healthy') {            
            Set-AzContext -SubscriptionId ${{ secrets.SUB_ID }}
            Switch-AzWebAppSlot -SourceSlotName 'PRODUCTION' -DestinationSlotName 'staging' -ResourceGroupName 'openhackgr65e605rg' -Name 'openhackgr65e605poi'            
          } 
          Write-Output "API is $($poiResponse.status)"
          
      shell: pwsh
